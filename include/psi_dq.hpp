#pragma once
#include <Mahi/Util.hpp>
#include <Eigen/Dense>
using namespace mahi::util;

inline Eigen::MatrixXd get_psi_dq(const std::vector<double>& qs){
	Eigen::MatrixXd psi_dq = Eigen::MatrixXd::Zero(14,14); 

	double qe = qs[0];
	double qf = qs[1];
	double l1 = qs[2];
	double l2 = qs[3];
	double l3 = qs[4];
	double theta1 = qs[5];
	double theta2 = qs[6];
	double theta3 = qs[7];
	double P_p_x = qs[8];
	double P_p_y = qs[9];
	double P_p_z = qs[10];
	double R_p_x = qs[11];
	double R_p_y = qs[12];
	double R_p_z = qs[13];
	double sinqe = sin(qe);
	double cosqe = cos(qe);
	double sinqf = sin(qf);
	double cosqf = cos(qf);
	double sintheta1 = sin(theta1);
	double costheta1 = cos(theta1);
	double sintheta2 = sin(theta2);
	double costheta2 = cos(theta2);
	double sintheta3 = sin(theta3);
	double costheta3 = cos(theta3);
	double sinR_p_x = sin(R_p_x);
	double cosR_p_x = cos(R_p_x);
	double sinR_p_y = sin(R_p_y);
	double cosR_p_y = cos(R_p_y);
	double sinR_p_z = sin(R_p_z);
	double cosR_p_z = cos(R_p_z);

	psi_dq(0,2) = sintheta1;
	psi_dq(0,5) = l1*costheta1;
	psi_dq(0,8) = -1.0;
	psi_dq(0,11) = cosR_p_x*sinR_p_y*-5.268051420404163E-2+sinR_p_x*sinR_p_y*4.608947781569839E-3-cosR_p_x*cosR_p_y*sinR_p_z*4.608947781569839E-3-cosR_p_y*sinR_p_x*sinR_p_z*5.268051420404163E-2;
	psi_dq(0,12) = cosR_p_x*cosR_p_y*-4.608947781569839E-3-cosR_p_y*sinR_p_x*5.268051420404163E-2-cosR_p_x*sinR_p_y*sinR_p_z*5.268051420404163E-2+sinR_p_x*sinR_p_y*sinR_p_z*4.608947781569839E-3;
	psi_dq(0,13) = cos(R_p_x+8.72664625997146E-2)*cosR_p_y*cosR_p_z*5.288174521000144E-2;
	psi_dq(1,2) = costheta1*-9.955366242634227E-1;
	psi_dq(1,5) = l1*sintheta1*9.955366242634227E-1;
	psi_dq(1,9) = -1.0;
	psi_dq(1,11) = sin(R_p_x+8.72664625997146E-2)*cosR_p_z*5.288174521000144E-2;
	psi_dq(1,13) = cos(R_p_x+8.72664625997146E-2)*sinR_p_z*5.288174521000144E-2;
	psi_dq(2,2) = costheta1*-9.437600198272378E-2;
	psi_dq(2,5) = l1*sintheta1*9.437600198272378E-2;
	psi_dq(2,10) = -1.0;
	psi_dq(2,11) = cosR_p_x*cosR_p_y*-5.268051420404163E-2+cosR_p_y*sinR_p_x*4.608947781569839E-3+cosR_p_x*sinR_p_y*sinR_p_z*4.608947781569839E-3+sinR_p_x*sinR_p_y*sinR_p_z*5.268051420404163E-2;
	psi_dq(2,12) = cosR_p_x*sinR_p_y*4.608947781569839E-3+sinR_p_x*sinR_p_y*5.268051420404163E-2-cosR_p_x*cosR_p_y*sinR_p_z*5.268051420404163E-2+cosR_p_y*sinR_p_x*sinR_p_z*4.608947781569839E-3;
	psi_dq(2,13) = cos(R_p_x+8.72664625997146E-2)*cosR_p_z*sinR_p_y*-5.288174521000144E-2;
	psi_dq(3,3) = sintheta2;
	psi_dq(3,6) = l2*costheta2;
	psi_dq(3,8) = -1.0;
	psi_dq(3,11) = cosR_p_x*sinR_p_y*2.234879123846412E-2-sinR_p_x*sinR_p_y*4.792713747590938E-2+cosR_p_x*cosR_p_y*sinR_p_z*4.792713747590938E-2+cosR_p_y*sinR_p_x*sinR_p_z*2.234879123846412E-2;
	psi_dq(3,12) = cosR_p_x*cosR_p_y*4.792713747590938E-2+cosR_p_y*sinR_p_x*2.234879123846412E-2+cosR_p_x*sinR_p_y*sinR_p_z*2.234879123846412E-2-sinR_p_x*sinR_p_y*sinR_p_z*4.792713747590938E-2;
	psi_dq(3,13) = cos(R_p_x+1.134464013796105)*cosR_p_y*cosR_p_z*-5.288174521000144E-2;
	psi_dq(4,3) = costheta2*4.160362969072935E-1;
	psi_dq(4,6) = l2*sintheta2*-4.160362969072935E-1;
	psi_dq(4,9) = -1.0;
	psi_dq(4,11) = sin(R_p_x+1.134464013796105)*cosR_p_z*-5.288174521000144E-2;
	psi_dq(4,13) = cos(R_p_x+1.134464013796105)*sinR_p_z*-5.288174521000144E-2;
	psi_dq(5,3) = costheta2*9.093480080011886E-1;
	psi_dq(5,6) = l2*sintheta2*-9.093480080011886E-1;
	psi_dq(5,10) = -1.0;
	psi_dq(5,11) = cosR_p_x*cosR_p_y*2.234879123846412E-2-cosR_p_y*sinR_p_x*4.792713747590938E-2-cosR_p_x*sinR_p_y*sinR_p_z*4.792713747590938E-2-sinR_p_x*sinR_p_y*sinR_p_z*2.234879123846412E-2;
	psi_dq(5,12) = cosR_p_x*sinR_p_y*-4.792713747590938E-2-sinR_p_x*sinR_p_y*2.234879123846412E-2+cosR_p_x*cosR_p_y*sinR_p_z*2.234879123846412E-2-cosR_p_y*sinR_p_x*sinR_p_z*4.792713747590938E-2;
	psi_dq(5,13) = cos(R_p_x+1.134464013796105)*cosR_p_z*sinR_p_y*5.288174521000144E-2;
	psi_dq(6,4) = sintheta3;
	psi_dq(6,7) = l3*costheta3;
	psi_dq(6,8) = -1.0;
	psi_dq(6,11) = cosR_p_x*sinR_p_y*3.033172296557396E-2+sinR_p_x*sinR_p_y*4.331818969433954E-2-cosR_p_x*cosR_p_y*sinR_p_z*4.331818969433954E-2+cosR_p_y*sinR_p_x*sinR_p_z*3.033172296557396E-2;
	psi_dq(6,12) = cosR_p_x*cosR_p_y*-4.331818969433954E-2+cosR_p_y*sinR_p_x*3.033172296557396E-2+cosR_p_x*sinR_p_y*sinR_p_z*3.033172296557396E-2+sinR_p_x*sinR_p_y*sinR_p_z*4.331818969433954E-2;
	psi_dq(6,13) = sin(R_p_x+6.108652381980164E-1)*cosR_p_y*cosR_p_z*-5.288174521000144E-2;
	psi_dq(7,4) = costheta3*5.795003273562997E-1;
	psi_dq(7,7) = l3*sintheta3*-5.795003273562997E-1;
	psi_dq(7,9) = -1.0;
	psi_dq(7,11) = cos(R_p_x+6.108652381980164E-1)*cosR_p_z*5.288174521000144E-2;
	psi_dq(7,13) = sin(R_p_x+6.108652381980164E-1)*sinR_p_z*-5.288174521000144E-2;
	psi_dq(8,4) = costheta3*-8.149720060185928E-1;
	psi_dq(8,7) = l3*sintheta3*8.149720060185928E-1;
	psi_dq(8,10) = -1.0;
	psi_dq(8,11) = cosR_p_x*cosR_p_y*3.033172296557396E-2+cosR_p_y*sinR_p_x*4.331818969433954E-2+cosR_p_x*sinR_p_y*sinR_p_z*4.331818969433954E-2-sinR_p_x*sinR_p_y*sinR_p_z*3.033172296557396E-2;
	psi_dq(8,12) = cosR_p_x*sinR_p_y*4.331818969433954E-2-sinR_p_x*sinR_p_y*3.033172296557396E-2+cosR_p_x*cosR_p_y*sinR_p_z*3.033172296557396E-2+cosR_p_y*sinR_p_x*sinR_p_z*4.331818969433954E-2;
	psi_dq(8,13) = sin(R_p_x+6.108652381980164E-1)*cosR_p_z*sinR_p_y*5.288174521000144E-2;
	psi_dq(9,0) = 1.0;
	psi_dq(10,1) = 1.0;
	psi_dq(11,2) = 1.0;
	psi_dq(12,3) = 1.0;
	psi_dq(13,4) = 1.0;
	return psi_dq;
}